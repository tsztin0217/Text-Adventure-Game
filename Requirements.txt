Text Adventure Game Development

In this assignment, students are tasked with designing a text-based adventure gameLinks to an external site.. This game should utilize the Python essentials covered thus far, including, but not limited to:

Strings and String Manipulation
User-Defined Functions and Objects (variables)
User Input and Input Handling
Conditional and Nested Conditional Statements (if/elif/else)
Loops (for/while)
Controlling for Errors (try/except)
 

 

The working version of the game should include:

An executable script (a script that runs from beginning to end upon execution) that includes:
a game that can be successfully completed within a maximum of 3 minutes
â€¦a minimum of:
3 stages, not including the fail()/win() functions (maximum of 5 stages). Think of a stage like a scene where many things can happen before moving on to the next scene.
2 defined variables
1 loop
1 nested conditional statement (conditional statement within a conditional statement)
1 fail() function (executed whenever a user loses the game)
1 win() function (executed whenever a user wins the game)
All code should be in a single code cell
A docstring at the beginning of game that:
Is no more than 150 words
Introduces the game and its purpose
Identifies any bugs that are not yet worked out
 

Submission Requirements

A working version of your game in the following format:
Jupyter Notebook (.ipynb format)
All code needs to be in a single cell
 

Restrictions

Your game must be based on a book, movie, or TV show. Make sure to provide a source in the docstring.
No compressed files (.zip, .rar, etc.).
No linking to external content or websites.
No alternate paths or endings. A user must either win or lose your game. Do not make different versions of the same stage.
No games based on Pokemon, Harry Potter, or Hangman.
(advanced) The only programming language you may use is Python (no JavaScript, C, or other languages allowed).
(advanced) Global variables may NOT be used (avoid things such as combat engines and character attributes such as health points).
(advanced) No use of class structures or other object-oriented programming structures (you must stick to user-defined functions).
(advanced) Your functions are not allowed to have return statements.
(advanced) You are not allowed to pass things between the stages of your game (stages should not inherit arguments from other stages). For example, a key found in Stage 1 cannot be carried forward to Stage 2.
